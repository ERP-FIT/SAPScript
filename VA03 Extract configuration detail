Global SapGuiAuto As Object
Global SAPApp As Object
Global session As Object
Global SAPConion As Object
Sub open_sap()
    If session Is Nothing Then
        Set SapGuiAuto = GetObject("SAPGUI")  'Get the SAP GUI Scripting object
        Set SAPApp = SapGuiAuto.GetScriptingEngine 'Get the currently running SAP GUI
        Set SAPCon = SAPApp.Children(0) 'Get the first system that is currently connected
        Set session = SAPCon.Children(0) 'Get the first session (window) on that connection
    End If
End Sub

Sub close_sap()
    If Not SAPApp Is Nothing Then
        Set session = Nothing
        Set SAPCon = Nothing
        Set SAPApp = Nothing
        Set SapGuiAuto = Nothing
        MsgBox "Process Completed"
    End If
End Sub

Sub va03_download_sales_order()
    Dim country As String
    Dim sales_order As String
    
    sales_order = InputBox("Sales Order", "Input Your Sales Order Number", "8759931")
    If sales_order = "" Then Exit Sub
    
    Call open_sap
    
    On Error Resume Next
    Set sheet_sales_order = Sheets("Sales Order_" & sales_order)
    If Err.Number = 0 Then
        sheet_sales_order.Cells.Clear
    Else
        Set sheet_sales_order = Sheets.Add(After:=Sheets(Sheets.Count))
        sheet_sales_order.Name = "Sales Order_" & sales_order
    End If
    sheet_sales_order.Cells(1, 1) = "Item"
    sheet_sales_order.Cells(1, 2) = "Material"
    sheet_sales_order.Cells(1, 3) = "Desc"
    
    detect_column_finished = False
    session.findById("wnd[0]").maximize
    session.findById("wnd[0]/tbar[0]/okcd").Text = "/nva03"
    session.findById("wnd[0]").sendVKey 0
    session.findById("wnd[0]/usr/ctxtVBAK-VBELN").Text = sales_order 'sales order "8403593"
    session.findById("wnd[0]").sendVKey 0
    
    session.findById("wnd[0]/mbar/menu[4]/menu[0]/menu[3]").Select  'display ship to party
    country = session.findById("wnd[0]/usr").findbyNameEx("ADDR1_DATA-COUNTRY", 32).Text
    session.findById("wnd[0]/tbar[0]/btn[3]").press                'back
    
    session.findById("wnd[0]/usr/tabsTAXI_TABSTRIP_OVERVIEW/tabpT\02").Select
    Set items = session.findById("wnd[0]/usr").findbyNameEx("SAPMV45ATCTRL_U_ERF_AUFTRAG", 80)
    total_items = items.verticalScrollbar.Maximum + 1 '
    If total_items = 0 Then
       total_items = 1
    End If
    PageSize = items.verticalScrollbar.PageSize
    items.verticalScrollbar.Position = 0
    Set cur_row = items.Rows(0)
    col_count = 0
    For ii = 0 To cur_row.Count - 1     'get the col index due to different user settings
        col_count = col_count + 1
        If cur_row(ii + 0).Name = "VBAP-POSNR" Then '+0 to force convert to expected Integer type, otherwise there will be error:Bad index type for collection access
            col_item = ii + 0
        ElseIf cur_row(ii + 0).Name = "RV45A-MABNR" Then
            col_mat = ii + 0
        ElseIf cur_row(ii + 0).Name = "VBAP-PSTYV" Then
            col_item_category = ii + 0
        ElseIf cur_row(ii + 0).Name = "VBAP-ARKTX" Then
            col_desc = ii + 0
        ElseIf cur_row(ii + 0).Name = "VBAP-ABGRU" Then
            ID = cur_row(ii + 0).ID
            'ID = Replace(ID, Table & "cmbVBAP-ABGRU[", "")  'retrieve the column from ID field, other than the sequence.
            ID = Split(ID, ",")(0)  'the first part before ,
            col_rej_reason = Int(Right(ID, Len(ID) - InStr(ID, "ABGRU[") - 5))
        Else
            col_count = col_count - 1
        End If
        If col_count > 4 Then
            Exit For
        End If
    Next ii
        
    seq = 1
    For j = 1 To total_items
        pageindex = j Mod PageSize
        If pageindex = 1 Then
            If j > 1 Then
                session.findById("wnd[0]/tbar[0]/btn[82]").press   ' click the next page button
                Set items = session.findById("wnd[0]/usr").findbyNameEx("SAPMV45ATCTRL_U_ERF_AUFTRAG", 80)
            End If
            CurrentRow = 0
        Else
            CurrentRow = CurrentRow + 1
        End If
        Set cur_row = items.Rows(CurrentRow)
        item_category = items.GetCell(CurrentRow, col_item_category).Text
        On Error Resume Next
            rej_reason = items.GetCell(CurrentRow, col_rej_reason).Text
        If Err.Number <> 0 Then rej_reason = ""
        material = items.GetCell(CurrentRow, col_mat).Text
        If rej_reason = "" Then
            sheet_sales_order.Cells(seq + 1, 1) = items.GetCell(CurrentRow, col_item).Text
            sheet_sales_order.Cells(seq + 1, 2) = material
            sheet_sales_order.Cells(seq + 1, 3) = items.GetCell(CurrentRow, col_desc).Text
            'sheet_sales_order.Cells(seq + 1, 2) = item_category
            seq = seq + 1
        End If
     Next j
     
     Call extract_config(sales_order, country)
     Call close_sap
End Sub

Sub extract_config(sales_order As String, country As String)
    Dim sheet_bom As Worksheet
    Dim sheet_sales_order As Worksheet
    Dim sheet_result As Worksheet
            
    Set sheet_sales_order = Sheets("Sales Order_" & sales_order)
    bom_sheet_name = ""
    For k = 2 To Sheets("Template").UsedRange.Rows.Count
        If sheet_sales_order.Cells(2, 2) = Sheets("Template").Cells(k, 1) Then
            bom_sheet_name = Sheets("Template").Cells(k, 2)
            Exit For
        End If
    Next k
    If bom_sheet_name = "" Then MsgBox "template BOM not defined in template for KMAT:" & sheet_sales_order.Cells(2, 1)
    
    On Error Resume Next
        Set sheet_bom = Sheets(bom_sheet_name)
    If Err.Number <> 0 Then MsgBox "template sheet:" + bom_sheet_name + "does not exist"
    
    Set sheet_so_config = Sheets("config_" & sales_order)
    If Err.Number = 0 Then
        sheet_so_config.Cells.Clear
    Else
        Set sheet_so_config = Sheets.Add(After:=Sheets(Sheets.Count))
        sheet_so_config.Name = "config_" & sales_order
    End If
        
    last_row = sheet_bom.UsedRange.Rows.Count
    last_row_sales_order = sheet_sales_order.UsedRange.Rows.Count
    If last_row_sales_order < 2 Then Exit Sub
    
    seq = 1
    sheet_so_config.Cells(1, 1) = "Material"
    sheet_so_config.Cells(1, 2) = "Desc"
    sheet_so_config.Cells(1, 3) = "Measurement Setting"
    For i = 2 To last_row
        material = sheet_bom.Cells(i, 1)
        desc = sheet_bom.Cells(i, 2)
        yes_config = sheet_bom.Cells(i, 3)
        no_config = sheet_bom.Cells(i, 4)
        
        config = yes_config
        If UCase(material) = "CHINA" Then
            If UCase(country) <> "CN" Then config = no_config
        ElseIf material <> "" Then
            material_found = False
            For j = 2 To last_row_sales_order
                If sheet_sales_order.Cells(j, 2) = material Then
                    material_found = True
                    Exit For
                End If
            Next j
            If material_found = False Then config = no_config
        End If
        'to be decided by next level material, so the config result to be cleared
        If (IsNumeric(config) = True And (Len(config) = 7 Or Len(config) = 8)) Then config = ""

        sheet_so_config.Cells(seq + 1, 1) = material
        'special handling of check by country=China
        If UCase(material) = "CHINA" And country <> "CN" Then sheet_so_config.Cells(seq + 1, 1) = "Country=" & country
        sheet_so_config.Cells(seq + 1, 2) = desc
        sheet_so_config.Cells(seq + 1, 3) = config
        seq = seq + 1
    Next i
    sheet_so_config.Columns("A:C").AutoFit
End Sub
